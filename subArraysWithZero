class Solution {
    public long zeroFilledSubarray(int[] nums) {   // n*n+1 /2
        //1,3,0,0,2,0,0,4
        //0,0,0,2,0,0
        int n = nums.length;
        long size=1; long count =0; boolean zero = false;
        for(int i=0;i<n;i++)
        {
            int element = nums[i];
            if(element!=0)
            {
                long value=0;
                if(size>1)                                    //c s z
                {
                    value= (size*(size+1))/2;   //0,0,0,2,0,0 // 8 2 1
                    count-=size;
                    count+=value;
                }
                    
                zero = false; size=1;
                continue;
            }
            if(element == 0 && zero==true)
            {
                size++;
                zero = true;
                count++;
            }
            if(element==0 && zero==false)
            {
                zero = true;
                count++;
            }
            if(i==n-1 && size>1)
            {
                long value=0;
                value= (size*(size+1))/2; 
                    count-=size;// 6
                    count+=value;// 9
            }
            
        }
        
        long number = count;
        
        return number;
        
    }
}
